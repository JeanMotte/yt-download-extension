/* tslint:disable */
/* eslint-disable */
/**
 * YT Download Service
 * Allows a google authenticated user to download videos from YouTube.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jijimotte@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Model for a video resolution option.
 * @export
 * @interface ResolutionOption
 */
export interface ResolutionOption {
    /**
     * 
     * @type {string}
     * @memberof ResolutionOption
     */
    resolution: string;
    /**
     * 
     * @type {string}
     * @memberof ResolutionOption
     */
    formatId: string;
    /**
     * 
     * @type {boolean}
     * @memberof ResolutionOption
     */
    hasAudio: boolean;
    /**
     * 
     * @type {string}
     * @memberof ResolutionOption
     */
    note?: string | null;
}

/**
 * Check if a given object implements the ResolutionOption interface.
 */
export function instanceOfResolutionOption(value: object): value is ResolutionOption {
    if (!('resolution' in value) || value['resolution'] === undefined) return false;
    if (!('formatId' in value) || value['formatId'] === undefined) return false;
    if (!('hasAudio' in value) || value['hasAudio'] === undefined) return false;
    return true;
}

export function ResolutionOptionFromJSON(json: any): ResolutionOption {
    return ResolutionOptionFromJSONTyped(json, false);
}

export function ResolutionOptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResolutionOption {
    if (json == null) {
        return json;
    }
    return {
        
        'resolution': json['resolution'],
        'formatId': json['format_id'],
        'hasAudio': json['has_audio'],
        'note': json['note'] == null ? undefined : json['note'],
    };
}

export function ResolutionOptionToJSON(json: any): ResolutionOption {
    return ResolutionOptionToJSONTyped(json, false);
}

export function ResolutionOptionToJSONTyped(value?: ResolutionOption | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resolution': value['resolution'],
        'format_id': value['formatId'],
        'has_audio': value['hasAudio'],
        'note': value['note'],
    };
}

