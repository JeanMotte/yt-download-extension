/* tslint:disable */
/* eslint-disable */
/**
 * YT Download Service
 * Allows a google authenticated user to download videos from YouTube.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jijimotte@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for downloading a video sample.
 * @export
 * @interface DownloadSampleRequest
 */
export interface DownloadSampleRequest {
    /**
     * 
     * @type {string}
     * @memberof DownloadSampleRequest
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof DownloadSampleRequest
     */
    formatId?: string | null;
    /**
     * Start time in HH:MM:SS
     * @type {string}
     * @memberof DownloadSampleRequest
     */
    startTime: string;
    /**
     * End time in HH:MM:SS
     * @type {string}
     * @memberof DownloadSampleRequest
     */
    endTime: string;
}

/**
 * Check if a given object implements the DownloadSampleRequest interface.
 */
export function instanceOfDownloadSampleRequest(value: object): value is DownloadSampleRequest {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('startTime' in value) || value['startTime'] === undefined) return false;
    if (!('endTime' in value) || value['endTime'] === undefined) return false;
    return true;
}

export function DownloadSampleRequestFromJSON(json: any): DownloadSampleRequest {
    return DownloadSampleRequestFromJSONTyped(json, false);
}

export function DownloadSampleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DownloadSampleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'formatId': json['format_id'] == null ? undefined : json['format_id'],
        'startTime': json['start_time'],
        'endTime': json['end_time'],
    };
}

export function DownloadSampleRequestToJSON(json: any): DownloadSampleRequest {
    return DownloadSampleRequestToJSONTyped(json, false);
}

export function DownloadSampleRequestToJSONTyped(value?: DownloadSampleRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'url': value['url'],
        'format_id': value['formatId'],
        'start_time': value['startTime'],
        'end_time': value['endTime'],
    };
}

